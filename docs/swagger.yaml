definitions:
  dto.CreateProductDto:
    properties:
      description:
        type: string
      name:
        maxLength: 45
        minLength: 5
        type: string
      price:
        type: number
    required:
    - description
    - name
    - price
    type: object
  dto.CreateUserDto:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.UpdateProductDto:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        maxLength: 45
        minLength: 5
        type: string
      price:
        type: number
    required:
    - description
    - name
    - price
    type: object
  dto.UpdateUserDto:
    properties:
      UUID:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.Product:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        maxLength: 45
        minLength: 5
        type: string
      price:
        type: number
      updatedAt:
        type: string
    required:
    - description
    - name
    - price
    type: object
  models.User:
    properties:
      CreatedAt:
        type: string
      DeletedAt:
        type: string
      Password:
        type: string
      UUID:
        type: string
      UpdatedAt:
        type: string
      Username:
        type: string
    required:
    - Password
    - Username
    type: object
info:
  contact: {}
paths:
  /v1/login/:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User login model
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Login
      tags:
      - Auth
  /v1/products/:
    get:
      consumes:
      - application/json
      description: Fetch all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Fetch all product
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Add Product
      parameters:
      - description: Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateProductDto'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Add Product
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update Product
      parameters:
      - description: Product Dto
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Update Product
      tags:
      - Products
  /v1/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Delete Product
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Fetch product by id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Fetch product by id
      tags:
      - Products
  /v1/users/:
    post:
      consumes:
      - application/json
      description: Add user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: User Dto
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update user
      tags:
      - Users
  /v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete user
      tags:
      - Users
  /v1/users/getbyusername/{username}:
    get:
      consumes:
      - application/json
      description: Find user by username
      parameters:
      - description: User Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Find user
      tags:
      - Users
  /v1/users/getbyuuid/{uuid}:
    get:
      consumes:
      - application/json
      description: Find user by uuid
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Find user
      tags:
      - Users
swagger: "2.0"
